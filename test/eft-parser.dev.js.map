{"version":3,"file":"eft-parser.dev.js","sources":["../src/escape-parser.js","../src/eft-parser.js"],"sourcesContent":["// Set the escape character\nconst char = '&'\n\n// Initlize RegExp\nconst oct = new RegExp(`\\\\${char}[0-7]{1,3}`, 'g')\nconst ucp = new RegExp(`\\\\${char}u\\\\[.*?\\\\]`, 'g')\nconst uni = new RegExp(`\\\\${char}u.{0,4}`, 'g')\nconst hex = new RegExp(`\\\\${char}x.{0,2}`, 'g')\nconst esc = new RegExp(`\\\\${char}`, 'g')\nconst b = new RegExp(`\\\\${char}b`, 'g')\nconst t = new RegExp(`\\\\${char}t`, 'g')\nconst n = new RegExp(`\\\\${char}n`, 'g')\nconst v = new RegExp(`\\\\${char}v`, 'g')\nconst f = new RegExp(`\\\\${char}f`, 'g')\nconst r = new RegExp(`\\\\${char}r`, 'g')\n\n// Escape octonary sequence\nconst O2C = () => {\n\tthrow new SyntaxError('Octal escape sequences are not allowed in EFML.')\n}\n\n// Escape unicode code point sequence\nconst UC2C = (val) => {\n\tval = val.substr(3, val.length - 4)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\ttry {\n\t\treturn String.fromCodePoint(val)\n\t} catch (err) {\n\t\tthrow new SyntaxError('Undefined Unicode code-point')\n\t}\n}\n\n// Escape unicode sequence\nconst U2C = (val) => {\n\tval = val.substring(2)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\treturn String.fromCharCode(val)\n}\n\n// Escape hexadecimal sequence\nconst X2C = (val) => {\n\tval = `00${val.substring(2)}`\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid hexadecimal escape sequence')\n\treturn String.fromCharCode(val)\n}\n\nconst ESCAPE = (string) => {\n\t// Split strings\n\tconst splited = string.split(char + char)\n\tconst escaped = []\n\n\t// Escape all known escape characters\n\tfor (let i of splited) {\n\t\tconst escapedStr = i\n\t\t\t.replace(oct, O2C)\n\t\t\t.replace(ucp, UC2C)\n\t\t\t.replace(uni, U2C)\n\t\t\t.replace(hex, X2C)\n\t\t\t.replace(b, '\\b')\n\t\t\t.replace(t, '\\t')\n\t\t\t.replace(n, '\\n')\n\t\t\t.replace(v, '\\v')\n\t\t\t.replace(f, '\\f')\n\t\t\t.replace(r, '\\r')\n\t\t\t// Remove all useless escape characters\n\t\t\t.replace(esc, '')\n\t\tescaped.push(escapedStr)\n\t}\n\t// Return escaped string\n\treturn escaped.join(char)\n}\n\n// export default ESCAPE\nexport default ESCAPE\n","import efEscape from './escape-parser.js'\n\nconst typeSymbols = '>#%@.-+'.split('')\nconst reserved = '__EFPLACEHOLDER__ $parent $key $data $element $refs $methods $mount $umount $subscribe $unsubscribe $update $destroy __DIRECTMOUNT__'.split(' ')\nconst mustache = /\\{\\{.+?\\}\\}/g\nconst spaceIndent = /^(\\t*)( *).*/\nconst hashref = /#([^}]|}[^}])*$/\n\nconst getErrorMsg = (msg, line = -2) => `Failed to parse eft template: ${msg}. at line ${line + 1}`\n\nconst isEmpty = string => !string.replace(/\\s/, '')\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\nconst ESCAPE = (string) => {\n\ttry {\n\t\tconst parsed = JSON.parse(string)\n\t\tif (['number', 'boolean'].indexOf(typeof parsed) === -1) return efEscape(string)\n\t\treturn parsed\n\t} catch (e) {\n\t\treturn efEscape(string)\n\t}\n}\n\nconst getOffset = (string, parsingInfo) => {\n\tif (parsingInfo.offset !== null) return\n\tparsingInfo.offset = string.match(/\\s*/)[0]\n\tif (parsingInfo.offset) parsingInfo.offsetReg = new RegExp(`^${parsingInfo.offset}`)\n}\n\nconst removeOffset = (string, parsingInfo, i) => {\n\tif (parsingInfo.offsetReg) {\n\t\tlet removed = false\n\t\tstring = string.replace(parsingInfo.offsetReg, () => {\n\t\t\tremoved = true\n\t\t\treturn ''\n\t\t})\n\t\tif (!removed) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got -1`, i))\n\t}\n\treturn string\n}\n\nconst getIndent = (string, parsingInfo) => {\n\tif (parsingInfo.indentReg) return\n\tconst spaces = string.match(spaceIndent)[2]\n\tif (spaces) {\n\t\tparsingInfo.indentReg = new RegExp(spaces, 'g')\n\t}\n}\n\nconst getDepth = (string, parsingInfo, i) => {\n\tlet depth = 0\n\tif (parsingInfo.indentReg) string = string.replace(/^\\s*/, str => str.replace(parsingInfo.indentReg, '\\t'))\n\tconst content = string.replace(/^\\t*/, (str) => {\n\t\tdepth = str.length\n\t\treturn ''\n\t})\n\tif (/^\\s/.test(content)) throw new SyntaxError(getErrorMsg('Bad indent', i))\n\treturn { depth, content }\n}\n\nconst resolveDepth = (ast, depth) => {\n\tlet currentNode = ast\n\tfor (let i = 0; i < depth; i++) currentNode = currentNode[currentNode.length - 1]\n\treturn currentNode\n}\n\nconst splitDefault = (string) => {\n\tstring = string.slice(2, string.length - 2)\n\tconst [_path, ..._default] = string.split('=')\n\tconst pathArr = _path.trim().split('.')\n\tconst defaultVal = ESCAPE(_default.join('=').trim())\n\tif (checkValidType(defaultVal)) return [pathArr, defaultVal]\n\treturn [pathArr]\n}\n\nconst splitLiterals = (string) => {\n\tconst strs = string.split(mustache)\n\tif (strs.length === 1) return ESCAPE(string)\n\tconst tmpl = []\n\tif (strs.length === 2 && !strs[0] && !strs[1]) tmpl.push(0)\n\telse tmpl.push(strs.map(efEscape))\n\tconst mustaches = string.match(mustache)\n\tif (mustaches) tmpl.push(...mustaches.map(splitDefault))\n\treturn tmpl\n}\n\nconst pushStr = (textArr, str) => {\n\tif (str) textArr.push(str)\n}\n\nconst parseText = (string) => {\n\tconst result = splitLiterals(string)\n\tif (checkValidType(result)) return [`${result}`]\n\tconst [strs, ...exprs] = result\n\tconst textArr = []\n\tfor (let i = 0; i < exprs.length; i++) {\n\t\tpushStr(textArr, strs[i])\n\t\ttextArr.push(exprs[i])\n\t}\n\tpushStr(textArr, strs[strs.length - 1])\n\treturn textArr\n}\n\nconst dotToSpace = val => val.replace(/\\./g, ' ')\n\nconst parseTag = (string) => {\n\tconst tagInfo = {}\n\tconst [tag, ...content] = string.replace(hashref, (val) => {\n\t\ttagInfo.ref = val.slice(1)\n\t\treturn ''\n\t}).split('.')\n\ttagInfo.tag = tag\n\ttagInfo.class = splitLiterals(content.join('.'))\n\tif (typeof tagInfo.class === 'string') tagInfo.class = dotToSpace(tagInfo.class).trim()\n\telse if (tagInfo.class[0]) tagInfo.class[0] = tagInfo.class[0].map(dotToSpace)\n\treturn tagInfo\n}\n\nconst parseNodeProps = (string) => {\n\tconst splited = string.split('=')\n\treturn {\n\t\tname: splited.shift().trim(),\n\t\tvalue: splitLiterals(splited.join('=').trim())\n\t}\n}\n\nconst parseEvent = (string) => {\n\tconst splited = string.split('=')\n\treturn {\n\t\tname: splited.shift().trim(),\n\t\tvalue: splited.join('=').trim()\n\t}\n}\n\nconst setOption = (options, option) => {\n\tswitch (option) {\n\t\tcase 'stop': {\n\t\t\toptions.s = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'stopImmediate': {\n\t\t\toptions.i = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'prevent': {\n\t\t\toptions.p = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'shift': {\n\t\t\toptions.h = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'alt': {\n\t\t\toptions.a = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'ctrl': {\n\t\t\toptions.c = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'meta': {\n\t\t\toptions.t = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'capture': {\n\t\t\toptions.u = 1\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tconsole.warn(`Abandoned unsupported event option '${option}'.`)\n\t\t}\n\t}\n}\n\nconst getOption = (options, keys, option) => {\n\tconst keyCode = parseInt(option, 10)\n\tif (isNaN(keyCode)) return setOption(options, option)\n\tkeys.push(keyCode)\n}\n\nconst getEventOptions = (name) => {\n\tconst options = {}\n\tconst keys = []\n\tconst [listener, ...ops] = name.split('.')\n\toptions.l = listener\n\tfor (let i of ops) getOption(options, keys, i)\n\tif (keys.length > 0) options.k = keys\n\treturn options\n}\n\nconst splitEvents = (string) => {\n\tconst [name, ...value] = string.split(':')\n\tconst content = value.join(':')\n\tif (content) return [name.trim(), splitLiterals(content)]\n\treturn [name.trim()]\n}\n\nconst parseLine = ({line, ast, parsingInfo, i}) => {\n\tif (isEmpty(line)) return\n\tgetIndent(line, parsingInfo)\n\tgetOffset(line, parsingInfo)\n\n\tlet { depth, content } = getDepth(removeOffset(line, parsingInfo, i), parsingInfo, i)\n\n\tif (content) {\n\t\tif (depth < 0 || depth - parsingInfo.prevDepth > 1 || (depth - parsingInfo.prevDepth === 1 && ['comment', 'tag'].indexOf(parsingInfo.prevType) === -1) || (parsingInfo.prevType !== 'comment' && depth === 0 && parsingInfo.topExists)) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got ${depth}`, i))\n\t\tconst type = content[0]\n\t\tcontent = content.slice(1)\n\t\tif (!parsingInfo.topExists && typeSymbols.indexOf(type) >= 0 && type !== '>') throw new SyntaxError(getErrorMsg('No top level entry', i))\n\t\tif (!content && typeSymbols.indexOf(type) >= 0) throw new SyntaxError(getErrorMsg('Empty content', i))\n\t\t// Jump back to upper level\n\t\tif (depth < parsingInfo.prevDepth || (depth === parsingInfo.prevDepth && parsingInfo.prevType === 'tag')) parsingInfo.currentNode = resolveDepth(ast, depth)\n\t\tparsingInfo.prevDepth = depth\n\n\t\tswitch (type) {\n\t\t\tcase '>': {\n\t\t\t\tif (!parsingInfo.topExists) {\n\t\t\t\t\tparsingInfo.topExists = true\n\t\t\t\t\tparsingInfo.minDepth = depth\n\t\t\t\t}\n\t\t\t\tconst info = parseTag(content)\n\t\t\t\tconst newNode = [{\n\t\t\t\t\tt: info.tag\n\t\t\t\t}]\n\t\t\t\tif (info.class) {\n\t\t\t\t\tnewNode[0].a = {}\n\t\t\t\t\tnewNode[0].a.class = info.class\n\t\t\t\t}\n\t\t\t\tif (info.ref) newNode[0].r = info.ref\n\t\t\t\tparsingInfo.currentNode.push(newNode)\n\t\t\t\tparsingInfo.currentNode = newNode\n\t\t\t\tparsingInfo.prevType = 'tag'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '#': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].a) parsingInfo.currentNode[0].a = {}\n\t\t\t\tparsingInfo.currentNode[0].a[name] = value\n\t\t\t\tparsingInfo.prevType = 'attr'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '%': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].p) parsingInfo.currentNode[0].p = {}\n\t\t\t\tparsingInfo.currentNode[0].p[name] = value\n\t\t\t\tparsingInfo.prevType = 'prop'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '@': {\n\t\t\t\tconst { name, value } = parseEvent(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].e) parsingInfo.currentNode[0].e = []\n\t\t\t\tconst options = getEventOptions(name)\n\t\t\t\tconst [method, _value] = splitEvents(value)\n\t\t\t\toptions.m = method\n\t\t\t\tif (_value) options.v = _value\n\t\t\t\tparsingInfo.currentNode[0].e.push(options)\n\t\t\t\tparsingInfo.prevType = 'event'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '.': {\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '-': {\n\t\t\t\tif (reserved.indexOf(content) !== -1) throw new SyntaxError(getErrorMsg(`Reserved name '${content}' should not be used`, i))\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 0\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'node'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '+': {\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 1\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'list'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tparsingInfo.prevType = 'comment'\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst parseEft = (template) => {\n\tif (!template) throw new TypeError(getErrorMsg('Template required, but nothing given'))\n\tconst tplType = typeof template\n\tif (tplType !== 'string') throw new TypeError(getErrorMsg(`Expected a string, but got a(n) ${tplType}`))\n\tconst lines = template.split(/\\r?\\n/)\n\tconst ast = []\n\tconst parsingInfo = {\n\t\tindentReg: null,\n\t\tprevDepth: 0,\n\t\toffset: null,\n\t\toffsetReg: null,\n\t\tprevType: 'comment',\n\t\tcurrentNode: ast,\n\t\ttopExists: false,\n\t}\n\tfor (let i = 0; i < lines.length; i++) parseLine({line: lines[i], ast, parsingInfo, i})\n\n\tif (ast[0]) return ast[0]\n\tthrow new SyntaxError(getErrorMsg('Nothing to be parsed', lines.length - 1))\n}\n\nexport default parseEft\n"],"names":["const","ESCAPE","let","efEscape","name","value"],"mappings":"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"}